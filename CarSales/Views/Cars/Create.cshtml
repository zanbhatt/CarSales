@model CarSales.Models.Car

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Car</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.MakeId, "Make", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(x => x.MakeId, ViewBag.MakeId as IEnumerable<SelectListItem>, "Please Select", htmlAttributes: new { @id = "ddlMake", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MakeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ModelId, "Model", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(x => x.ModelId, new List<SelectListItem>(), "Please Select", htmlAttributes: new { @id = "ddlModel", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ModelId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Engine, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Engine, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Engine, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Doors, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Doors, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Doors, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Wheels, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Wheels, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Wheels, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BodyTypeId, "BodyTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.BodyTypeId, new List<SelectListItem>(), "Please Select", htmlAttributes: new { @id = "ddlBodyTypes", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BodyTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        $(document).ready(function () {
            $('#ddlMake').change(function () {
                $.ajax({
                    type: "POST", 
                    url: "GetModels",
                    data: { "makeId": $('#ddlMake').val() },
                    datatype: "json",
                    success: function (data) {
                        var model = $('#ddlModel');
                        for (var i = 0; i < data.length; i++) {
                            model.append('<option value=' + data[i].Value + '>' + data[i].Text + '</option>');
                        }
                    }
                });

                $.ajax({
                    type: "POST",
                    url: "GetBodyTypes",
                    data: { "makeId": $('#ddlMake').val() },
                    datatype: "json",
                    success: function (data) {
                        var types = $('#ddlBodyTypes');                        
                        for (var i = 0; i < data.length; i++) {
                            types.append('<option value=' + data[i].Value + '>' + data[i].Text + '</option>');
                        }
                    }
                });
            });
        });
    </script>

}
